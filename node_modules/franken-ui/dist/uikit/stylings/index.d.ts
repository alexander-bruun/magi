import type { AccordionHooks as AccordionHooksType } from './accordion.js';
import type { AlertHooks as AlertHooksType } from './alert.js';
import type { AlignHooks as AlignHooksType } from './align.js';
import type { AnimationHooks as AnimationHooksType } from './animation.js';
import type { ArticleHooks as ArticleHooksType } from './article.js';
import type { BackgroundHooks as BackgroundHooksType } from './background.js';
import type { BadgeHooks as BadgeHooksType } from './badge.js';
import type { BaseHooks as BaseHooksType } from './base.js';
import type { BreadcrumbHooks as BreadcrumbHooksType } from './breadcrumb.js';
import type { ButtonHooks as ButtonHooksType } from './button.js';
import type { CardHooks as CardHooksType } from './card.js';
import type { CloseHooks as CloseHooksType } from './close.js';
import type { ColumnHooks as ColumnHooksType } from './column.js';
import type { ComboboxHooks as ComboboxHooksType } from './combobox.js';
import type { CommentHooks as CommentHooksType } from './comment.js';
import type { ContainerHooks as ContainerHooksType } from './container.js';
import type { CountdownHooks as CountdownHooksType } from './countdown.js';
import type { CoverHooks as CoverHooksType } from './cover.js';
import type { DescriptionListHooks as DescriptionListHooksType } from './description-list.js';
import type { DividerHooks as DividerHooksType } from './divider.js';
import type { DotnavHooks as DotnavHooksType } from './dotnav.js';
import type { DropHooks as DropHooksType } from './drop.js';
import type { DropbarHooks as DropbarHooksType } from './dropbar.js';
import type { DropdownHooks as DropdownHooksType } from './dropdown.js';
import type { DropnavHooks as DropnavHooksType } from './dropnav.js';
import type { FlexHooks as FlexHooksType } from './flex.js';
import type { FormRangeHooks as FormRangeHooksType } from './form-range.js';
import type { FormHooks as FormHooksType } from './form.js';
import type { GridHooks as GridHooksType } from './grid.js';
import type { HeadingHooks as HeadingHooksType } from './heading.js';
import type { HeightHooks as HeightHooksType } from './height.js';
import type { IconHooks as IconHooksType } from './icon.js';
import type { IconnavHooks as IconnavHooksType } from './iconnav.js';
import type { LabelHooks as LabelHooksType } from './label.js';
import type { LeaderHooks as LeaderHooksType } from './leader.js';
import type { LightboxHooks as LightboxHooksType } from './lightbox.js';
import type { LinkHooks as LinkHooksType } from './link.js';
import type { ListHooks as ListHooksType } from './list.js';
import type { MarginHooks as MarginHooksType } from './margin.js';
import type { MarkerHooks as MarkerHooksType } from './marker.js';
import type { ModalHooks as ModalHooksType } from './modal.js';
import type { NavHooks as NavHooksType } from './nav.js';
import type { NavbarHooks as NavbarHooksType } from './navbar.js';
import type { NotificationHooks as NotificationHooksType } from './notification.js';
import type { OffcanvasHooks as OffcanvasHooksType } from './offcanvas.js';
import type { OverlayHooks as OverlayHooksType } from './overlay.js';
import type { PaddingHooks as PaddingHooksType } from './padding.js';
import type { PaginationHooks as PaginationHooksType } from './pagination.js';
import type { PlaceholderHooks as PlaceholderHooksType } from './placeholder.js';
import type { PositionHooks as PositionHooksType } from './position.js';
import type { PrintHooks as PrintHooksType } from './print.js';
import type { ProgressHooks as ProgressHooksType } from './progress.js';
import type { SearchHooks as SearchHooksType } from './search.js';
import type { SectionHooks as SectionHooksType } from './section.js';
import type { SliderHooks as SliderHooksType } from './slider.js';
import type { SlidenavHooks as SlidenavHooksType } from './slidenav.js';
import type { SlideshowHooks as SlideshowHooksType } from './slideshow.js';
import type { SortableHooks as SortableHooksType } from './sortable.js';
import type { SpinnerHooks as SpinnerHooksType } from './spinner.js';
import type { StepperHooks as StepperHooksType } from './stepper.js';
import type { StickyHooks as StickyHooksType } from './sticky.js';
import type { SubnavHooks as SubnavHooksType } from './subnav.js';
import type { SwitcherHooks as SwitcherHooksType } from './switcher.js';
import type { SvgHooks as SvgHooksType } from './svg.js';
import type { TabHooks as TabHooksType } from './tab.js';
import type { TableHooks as TableHooksType } from './table.js';
import type { TextHooks as TextHooksType } from './text.js';
import type { ThumbnavHooks as ThumbnavHooksType } from './thumbnav.js';
import type { TileHooks as TileHooksType } from './tile.js';
import type { TooltipHooks as TooltipHooksType } from './tooltip.js';
import type { ToTopHooks as ToTopHooksType } from './totop.js';
import type { TransitionHooks as TransitionHooksType } from './transition.js';
import type { UtilityHooks as UtilityHooksType } from './utility.js';
import type { WidthHooks as WidthHooksType } from './width.js';
import type { VisibilityHooks as VisibilityHooksType } from './visibility.js';
type ComponentsType = {
    accordion: {
        hooks?: Partial<AccordionHooksType>;
    };
    alert: {
        hooks?: Partial<AlertHooksType>;
    };
    align: {
        media?: boolean;
        hooks?: Partial<AlignHooksType>;
    };
    animation: {
        hooks?: Partial<AnimationHooksType>;
    };
    article: {
        media?: boolean;
        hooks?: Partial<ArticleHooksType>;
    };
    background: {
        media?: boolean;
        hooks?: Partial<BackgroundHooksType>;
    };
    badge: {
        hooks?: Partial<BadgeHooksType>;
    };
    breadcrumb: {
        hooks?: Partial<BreadcrumbHooksType>;
    };
    button: {
        hooks?: Partial<ButtonHooksType>;
    };
    card: {
        media?: boolean;
        hooks?: Partial<CardHooksType>;
    };
    close: {
        hooks?: Partial<CloseHooksType>;
    };
    column: {
        media?: boolean;
        hooks?: Partial<ColumnHooksType>;
    };
    combobox: {
        hooks?: Partial<ComboboxHooksType>;
    };
    comment: {
        media?: boolean;
        hooks?: Partial<CommentHooksType>;
    };
    container: {
        media?: boolean;
        hooks?: Partial<ContainerHooksType>;
    };
    countdown: {
        media?: boolean;
        hooks?: Partial<CountdownHooksType>;
    };
    cover: {
        hooks?: Partial<CoverHooksType>;
    };
    'description-list': {
        hooks?: Partial<DescriptionListHooksType>;
    };
    divider: {
        hooks?: Partial<DividerHooksType>;
    };
    dotnav: {
        hooks?: Partial<DotnavHooksType>;
    };
    drop: {
        hooks?: Partial<DropHooksType>;
    };
    dropbar: {
        media?: boolean;
        hooks?: Partial<DropbarHooksType>;
    };
    dropdown: {
        media?: boolean;
        hooks?: Partial<DropdownHooksType>;
    };
    dropnav: {
        hooks?: Partial<DropnavHooksType>;
    };
    flex: {
        media?: boolean;
        hooks?: Partial<FlexHooksType>;
    };
    'form-range': {
        hooks?: Partial<FormRangeHooksType>;
    };
    form: {
        media?: boolean;
        hooks?: Partial<FormHooksType>;
    };
    grid: {
        media?: boolean;
        hooks?: Partial<GridHooksType>;
    };
    heading: {
        media?: boolean;
        hooks?: Partial<HeadingHooksType>;
    };
    height: {
        hooks?: Partial<HeightHooksType>;
    };
    icon: {
        hooks?: Partial<IconHooksType>;
    };
    iconnav: {
        hooks?: Partial<IconnavHooksType>;
    };
    label: {
        hooks?: Partial<LabelHooksType>;
    };
    leader: {
        hooks?: Partial<LeaderHooksType>;
    };
    lightbox: {
        hooks?: Partial<LightboxHooksType>;
    };
    link: {
        hooks?: Partial<LinkHooksType>;
    };
    list: {
        hooks?: Partial<ListHooksType>;
    };
    margin: {
        media?: boolean;
        hooks?: Partial<MarginHooksType>;
    };
    marker: {
        hooks?: Partial<MarkerHooksType>;
    };
    modal: {
        media?: boolean;
        hooks?: Partial<ModalHooksType>;
    };
    nav: {
        hooks?: Partial<NavHooksType>;
    };
    navbar: {
        media?: boolean;
        hooks?: Partial<NavbarHooksType>;
    };
    notification: {
        media?: boolean;
        hooks?: Partial<NotificationHooksType>;
    };
    offcanvas: {
        media?: boolean;
        hooks?: Partial<OffcanvasHooksType>;
    };
    overlay: {
        hooks?: Partial<OverlayHooksType>;
    };
    padding: {
        media?: boolean;
        hooks?: Partial<PaddingHooksType>;
    };
    pagination: {
        hooks?: Partial<PaginationHooksType>;
    };
    placeholder: {
        hooks?: Partial<PlaceholderHooksType>;
    };
    position: {
        media?: boolean;
        hooks?: Partial<PositionHooksType>;
    };
    progress: {
        hooks?: Partial<ProgressHooksType>;
    };
    search: {
        hooks?: Partial<SearchHooksType>;
    };
    section: {
        media?: boolean;
        hooks?: Partial<SectionHooksType>;
    };
    slidenav: {
        hooks?: Partial<SlidenavHooksType>;
    };
    slider: {
        hooks?: Partial<SliderHooksType>;
    };
    slideshow: {
        hooks?: Partial<SlideshowHooksType>;
    };
    sortable: {
        hooks?: Partial<SortableHooksType>;
    };
    spinner: {
        hooks?: Partial<SpinnerHooksType>;
    };
    stepper: {
        media?: boolean;
        hooks?: Partial<StepperHooksType>;
    };
    sticky: {
        hooks?: Partial<StickyHooksType>;
    };
    subnav: {
        hooks?: Partial<SubnavHooksType>;
    };
    svg: {
        hooks?: Partial<SvgHooksType>;
    };
    switcher: {
        hooks?: Partial<SwitcherHooksType>;
    };
    tab: {
        hooks?: Partial<TabHooksType>;
    };
    table: {
        media?: boolean;
        hooks?: Partial<TableHooksType>;
    };
    text: {
        media?: boolean;
        hooks?: Partial<TextHooksType>;
    };
    thumbnav: {
        hooks?: Partial<ThumbnavHooksType>;
    };
    tile: {
        media?: boolean;
        hooks?: Partial<TileHooksType>;
    };
    tooltip: {
        hooks?: Partial<TooltipHooksType>;
    };
    totop: {
        hooks?: Partial<ToTopHooksType>;
    };
    transition: {
        hooks?: Partial<TransitionHooksType>;
    };
    utility: {
        hooks?: Partial<UtilityHooksType>;
    };
    visibility: {
        media?: boolean;
        hooks?: Partial<VisibilityHooksType>;
    };
    width: {
        media?: boolean;
        hooks?: Partial<WidthHooksType>;
    };
    print: {
        hooks?: Partial<PrintHooksType>;
    };
};
export type OptionsType = {
    base?: boolean;
    hooks?: Partial<BaseHooksType>;
    components?: Partial<ComponentsType>;
};
export declare const components: {
    accordion: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./accordion.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    alert: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./alert.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    align: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./align.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    animation: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./animation.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    article: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./article.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    background: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./background.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    badge: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./badge.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    breadcrumb: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./breadcrumb.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    button: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./button.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    card: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./card.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    close: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./close.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    column: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./column.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    combobox: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./combobox.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    comment: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./comment.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    container: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./container.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    countdown: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./countdown.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    cover: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./cover.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    'description-list': {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./description-list.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    divider: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./divider.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    dotnav: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./dotnav.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    drop: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./drop.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    dropbar: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./dropbar.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    dropdown: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./dropdown.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    dropnav: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./dropnav.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    flex: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./flex.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    'form-range': {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./form-range.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    form: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./form.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    grid: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./grid.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    heading: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./heading.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    height: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./height.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    icon: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./icon.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    iconnav: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./iconnav.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    label: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./label.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    leader: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./leader.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    lightbox: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./lightbox.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    link: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./link.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    list: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./list.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    margin: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./margin.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    marker: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./marker.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    modal: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./modal.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    nav: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./nav.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    navbar: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./navbar.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    notification: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./notification.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    offcanvas: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./offcanvas.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    overlay: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./overlay.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    padding: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./padding.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    pagination: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./pagination.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    placeholder: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./placeholder.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    position: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./position.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    print: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./print.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    progress: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./progress.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    search: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./search.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    section: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./section.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    slidenav: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./slidenav.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    slider: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./slider.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    slideshow: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./slideshow.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    sortable: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./sortable.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    spinner: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./spinner.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    stepper: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./stepper.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    sticky: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./sticky.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    subnav: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./subnav.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    svg: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./svg.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    switcher: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./switcher.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    tab: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./tab.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    table: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./table.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    text: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./text.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    thumbnav: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./thumbnav.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    tile: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./tile.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    tooltip: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./tooltip.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    totop: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./totop.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    transition: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./transition.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    utility: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./utility.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    visibility: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./visibility.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
    width: {
        rules: import("tailwindcss/types/config.js").CSSRuleObject;
        media: import("tailwindcss/types/config.js").CSSRuleObject;
        addHooks: (args: import("./width.js").Args) => import("tailwindcss/types/config.js").CSSRuleObject;
    };
};
export {};
