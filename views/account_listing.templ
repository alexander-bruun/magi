package views

import (
    "fmt"
    "github.com/alexander-bruun/magi/models"
)

// AccountListType represents the type of account list being displayed
type AccountListType string

const (
    AccountListFavorites  AccountListType = "favorites"
    AccountListUpvoted    AccountListType = "upvoted"
    AccountListDownvoted  AccountListType = "downvoted"
    AccountListReading    AccountListType = "reading"
)

// GetAccountListConfig returns the display configuration for a given list type
func GetAccountListConfig(listType AccountListType) (title, breadcrumbLabel, path, emptyMessage string) {
    switch listType {
    case AccountListFavorites:
        return "Your Favorites", "Favorites", "/account/favorites", "You have no favorites yet."
    case AccountListUpvoted:
        return "Your Upvoted Mangas", "Upvoted", "/account/upvoted", "You have not upvoted any mangas yet."
    case AccountListDownvoted:
        return "Your Downvoted Mangas", "Downvoted", "/account/downvoted", "You have not downvoted any mangas yet."
    case AccountListReading:
        return "Currently Reading", "Currently Reading", "/account/reading", "You are not reading any mangas right now."
    default:
        return "Account", "Account", "/account", "No items found."
    }
}

// AccountMangaListing is a generic component for account manga lists (favorites, reading, upvoted, downvoted)
// Use includeTags=true to enable tag filtering on account pages
templ AccountMangaListing(mangas []models.Manga, currentPage int, totalPages int, sort string, order string, path string, emptyMessage string, allTags []string, searchFilter string) {
    @GenericMangaListingWithTypes(path, "account-manga-list", true, mangas, currentPage, totalPages, sort, order, emptyMessage, nil, "", allTags, nil, nil, searchFilter)
}

// AccountMangaListingWithTags includes selected tags and tag mode for filtered views
templ AccountMangaListingWithTags(mangas []models.Manga, currentPage int, totalPages int, sort string, order string, path string, emptyMessage string, selectedTags []string, tagMode string, allTags []string, searchFilter string) {
    @GenericMangaListingWithTypes(path, "account-manga-list", true, mangas, currentPage, totalPages, sort, order, emptyMessage, selectedTags, tagMode, allTags, nil, nil, searchFilter)
}

// Generic account page layout - consolidates all account list pages
templ AccountPageLayout(title string, breadcrumbLabel string, path string, mangas []models.Manga, currentPage int, totalPages int, sort string, order string, emptyMessage string, allTags []string, selectedTags []string, tagMode string, searchFilter string) {
    @PageTitle(fmt.Sprintf("%s - page #%d", title, currentPage))
    @Breadcrumb([]BreadcrumbItem{
        { Label: "Home", Href: "/" },
        { Label: "Account", Href: "/account" },
        { Label: breadcrumbLabel, Href: path },
    })

    <h2 class="uk-heading-line uk-h2 uk-card-title uk-text-center"><span>{ title }</span></h2>
    <div id="account-manga-list">
        if len(selectedTags) > 0 || tagMode != "" {
            @AccountMangaListingWithTags(mangas, currentPage, totalPages, sort, order, path, emptyMessage, selectedTags, tagMode, allTags, searchFilter)
        } else {
            @AccountMangaListing(mangas, currentPage, totalPages, sort, order, path, emptyMessage, allTags, searchFilter)
        }
    </div>
}

// ConsolidatedAccountList is the unified view for all account list types
// This is the ONLY view function that should be called for account lists
templ ConsolidatedAccountList(listType AccountListType, mangas []models.Manga, currentPage int, totalPages int, sort string, order string, selectedTags []string, tagMode string, allTags []string, searchFilter string) {
    {{ title, breadcrumbLabel, path, emptyMessage := GetAccountListConfig(listType) }}
    @AccountPageLayout(title, breadcrumbLabel, path, mangas, currentPage, totalPages, sort, order, emptyMessage, allTags, selectedTags, tagMode, searchFilter)
}
