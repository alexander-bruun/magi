package views

import (
	"fmt"
	"github.com/alexander-bruun/magi/models"
)

templ Mangas(mangas []models.Manga, currentPage int, totalPages int, sort string, order string, selectedTags []string, tagMode string, allTags []string) {
	@PageTitle(fmt.Sprintf("All Mangas (%d)", currentPage))
	@Breadcrumb([]BreadcrumbItem{
		{ Label: "Home", Href: "/" },
		{ Label: "Mangas", Href: "/mangas" },
	})
	<h2 class="uk-heading-line uk-h2 uk-card-title uk-text-center"><span>Mangas</span></h2>
	<div id="manga-listing">
		@MangaListing(mangas, currentPage, totalPages, sort, order, selectedTags, tagMode, allTags)
	</div>
}

// MangaResults renders only the results grid and pagination.
// Used for HTMX swaps targeting #manga-results so we don't inject a full page.
templ MangaResults(mangas []models.Manga, currentPage int, totalPages int, sort string, order string) {
	if len(mangas) > 0 {
		@MangaGrid(mangas, 300, 450, false, false)
		<div class="flex justify-center items-center py-8">
			@Pagination(totalPages, currentPage, sort, order)
		</div>
	} else {
		@EmptyState("No mangas have been indexed yet.")
	}
}

// MangaListing renders the SortControls and the MangaResults together.
templ MangaListing(mangas []models.Manga, currentPage int, totalPages int, sort string, order string, selectedTags []string, tagMode string, allTags []string) {
	@SortControls(sort, order, selectedTags, tagMode, allTags)
	<div id="manga-results">
		@MangaResults(mangas, currentPage, totalPages, sort, order)
	</div>
}

templ Pagination(totalPages int, currentPage int, sort string, order string) {
	<nav class="mt-4" aria-label="Pagination">
		<ul class="uk-pgn uk-pgn-default">
			@PaginationItem(currentPage > 1, currentPage-1, "Previous", "previous", sort, order)
			@PaginationNumbers(totalPages, currentPage, sort, order)
			@PaginationItem(currentPage < totalPages, currentPage+1, "Next", "next", sort, order)
		</ul>
	</nav>
}

templ PaginationItem(enabled bool, page int, text string, icon string, sort string, order string) {
	if enabled {
		<li>
			<a
				href={ templ.URL(fmt.Sprintf("?page=%d&sort=%s&order=%s", page, sort, order)) }
				hx-get={ fmt.Sprintf("/mangas?page=%d&sort=%s&order=%s", page, sort, order) }
					hx-include="#tag-filter-form input[name=sort], #tag-filter-form input[name=order], #tag-filter-form input[name=tag_mode], #tag-filter-form input[name=tags]"
					hx-replace-url="true"
					hx-target="#manga-listing"
					hx-push-url="true"
			>
				if icon != "" {
					if icon == "next" {
						<uk-icon icon="ChevronRight"></uk-icon>
					} else {
						<uk-icon icon="ChevronLeft"></uk-icon>
					}
				} else {
					{ text }
				}
			</a>
		</li>
	}	else {
		<li class="uk-disabled">
			<a
				href={ templ.URL(fmt.Sprintf("?page=%d&sort=%s&order=%s", page, sort, order)) }
				hx-get={ fmt.Sprintf("/mangas?page=%d&sort=%s&order=%s", page, sort, order) }
					hx-include="#tag-filter-form input[name=sort], #tag-filter-form input[name=order], #tag-filter-form input[name=tag_mode], #tag-filter-form input[name=tags]"
					hx-replace-url="true"
					hx-target="#manga-listing"
					hx-push-url="true"
			>
				if icon != "" {
					if icon == "next" {
						<uk-icon icon="ChevronRight"></uk-icon>
					} else {
						<uk-icon icon="ChevronLeft"></uk-icon>
					}
				} else {
					{ text }
				}
			</a>
		</li>
	}
}

templ PaginationNumbers(totalPages int, currentPage int, sort string, order string) {
	for i := 1; i <= totalPages; i++ {
		if i == currentPage {
			<li class="uk-active"><span>{ fmt.Sprint(i) }</span></li>
		} else if i == 1 || i == totalPages || (i >= currentPage-2 && i <= currentPage+2) {
			@PaginationItem(true, i, fmt.Sprint(i), "", sort, order)
		} else if (i == 2 && currentPage > 4) || (i == totalPages-1 && currentPage < totalPages-3) {
			<li class="uk-disabled"><span>â€¦</span></li>
		}
	}
}

templ SortControls(currentSort string, currentOrder string, selectedTags []string, tagMode string, allTags []string) {
	<div class="flex justify-end items-center gap-2 my-4">
		{{
			sorts := []struct{ Key, Label string }{
				{"name", "Title"},
				{"year", "Year"},
				{"status", "Status"},
				{"content_rating", "Content rating"},
				{"created_at", "Created"},
				{"updated_at", "Updated"},
			}
		}}

		<div class="uk-inline">
			<uk-select placeholder="Sort by" cls-custom="button: uk-btn uk-btn-default uk-btn-small" hx-get="/mangas" hx-target="#manga-listing" hx-include="#manga-sort-select, #tag-filter-form input[name=order], #tag-filter-form input[name=tag_mode], #tag-filter-form input[name=tags]" hx-push-url="true" hx-replace-url="true" hx-trigger="uk-select:input">
				<select id="manga-sort-select" hidden name="sort">
					for _, s := range sorts {
						if s.Key == currentSort || (currentSort == "title" && s.Key == "name") {
							<option value={ s.Key } selected>{ s.Label }</option>
						} else {
							<option value={ s.Key }>{ s.Label }</option>
						}
					}
				</select>
			</uk-select>
		</div>

		@TagsDropdown(currentSort, currentOrder, selectedTags, tagMode, allTags)

		{{ toggled := "desc" }}
		if currentOrder == "desc" {
			{{ toggled = "asc" }}
		}

		<a
			class="uk-btn uk-btn-default uk-btn-small uk-btn-icon ctrl-btn"
			href={ templ.URL(fmt.Sprintf("/mangas?sort=%s&order=%s", currentSort, toggled)) }
			hx-get={ fmt.Sprintf("/mangas?sort=%s&order=%s", currentSort, toggled) }
			hx-include="#tag-filter-form input[name=sort], #tag-filter-form input[name=order], #tag-filter-form input[name=tag_mode], #tag-filter-form input[name=tags]"
			hx-replace-url="true"
			hx-target="#manga-listing"
			hx-push-url="true"
			aria-label="Toggle sort order"
		>
			if currentOrder == "asc" {
				<uk-icon icon="ChevronUp"></uk-icon>
			} else {
				<uk-icon icon="ChevronDown"></uk-icon>
			}
		</a>
	</div>
}
