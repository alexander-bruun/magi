package views

import (
	"fmt"
	"github.com/alexander-bruun/magi/models"
)

templ Libraries() {
	{{ libraries, _ := models.GetLibraries() }}
	
	@PageTitle("Libraries")
	@Breadcrumb([]BreadcrumbItem{
		{ Label: "Home", Href: "/" },
		{ Label: "Libraries", Href: "/admin/libraries" },
	})
	<div class="uk-container mt-2">
		<div class="grid grid-cols-4 gap-4">
			<div id="form-column" class="col-span-1">
				<h3 class="uk-heading-line text-xl font-semibold mb-4 uk-h3 uk-text-center"><span>Creator</span></h3>
				<div class="uk-card p-2">
					@LibraryForm(models.Library{}, "post", false)
				</div>
			</div>
			<div id="table-column" class="col-span-3">
				<h3 class="uk-heading-line text-xl font-semibold mb-4 uk-h3 uk-text-center"><span>Libraries</span></h3>
				<div class="uk-card p-2">
					@LibraryTable(libraries)
				</div>
			</div>
		</div>
	</div>
}

templ LibraryTable(libraries []models.Library) {
	<div id="libraries-table">
		<table class="uk-table">
			<thead>
				<tr>
					<th class="text-center">ID</th>
					<th class="text-center">Name</th>
					<th class="text-center">Cron</th>
					<th class="text-center">Folders</th>
					<th class="text-center">Actions</th>
				</tr>
			</thead>
			<tbody>
				for _, library := range libraries {
					<tr>
						<td>
							<div class="mt-2 flex items-center justify-center">
								{ library.Slug }
							</div>
						</td>
						<td>
							<div class="mt-2 flex items-center justify-center">
								<p>{ library.Name }</p>
							</div>
						</td>
						<td>
							<div class="mt-2 flex items-center justify-center">
								{ library.Cron }
							</div>
						</td>
						<td>
							<div class="mt-2 flex items-center justify-center">
								{ library.GetFolderNames() }
							</div>
						</td>
						<td colspan="3">
							<div class="flex items-center justify-center">
								<div class="uk-btn-group uk-width-auto">
									<button
										type="button"
										class="uk-btn uk-btn-secondary h-10 w-10"
										hx-post={ fmt.Sprintf("/admin/libraries/%s/scan", library.Slug) }
										hx-trigger="click"
									>
										<uk-icon icon="RefreshCw"></uk-icon>
									</button>
									<button
										type="button"
										class="uk-btn uk-btn-default h-10 w-10"
										hx-get={ fmt.Sprintf("/admin/libraries/%s", library.Slug) }
										hx-trigger="click"
										hx-target="#library-form"
									>
										<uk-icon icon="Pencil"></uk-icon>
									</button>
									<button
										type="button"
										class="uk-btn uk-btn-destructive h-10 w-10"
										hx-delete={ fmt.Sprintf("/admin/libraries/%s", library.Slug) }
										hx-trigger="click"
										hx-target="#libraries-table"
										hx-swap="outerHTML"
										hx-confirm="Are you sure you want to delete this library?"
									>
										<uk-icon icon="Trash"></uk-icon>
									</button>
								</div>
							</div>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

templ LibraryForm(library models.Library, action string, editing bool) {
	if action == "post" {
		<div id="library-form">
			<form
				id="library-form"
				hx-post="/admin/libraries"
				hx-target="#libraries-table"
				hx-trigger="submit"
			>
				@FormContent(library, editing)
			</form>
		</div>
	} else {
		<div id="library-form">
			<form
				id="library-form"
				hx-put={ fmt.Sprintf("/admin/libraries/%s", library.Slug) }
				hx-target="#libraries-table"
				hx-trigger="submit"
			>
				@FormContent(library, editing)
			</form>
		</div>
	}
}

templ FormContent(library models.Library, editing bool) {
	<fieldset class="space-y-4">
		<div class="uk-margin">
			<input
				class="uk-input"
				aria-label="Input"
				type="text"
				name="name"
				placeholder="Library Name"
				value={ library.Name }
				required
				readonly?={ editing }
			/>
		</div>
		<div class="uk-margin">
			<input
				class="uk-input"
				aria-label="Input"
				type="text"
				name="cron"
				placeholder="Cron Expression"
				value={ library.Cron }
				required
			/>
		</div>
		<div class="uk-margin">
			<input
				class="uk-input"
				aria-label="Input"
				type="text"
				name="description"
				placeholder="Description"
				value={ library.Description }
				rows="5"
				required
			/>
		</div>
		@FolderInputs(library.Folders, editing)
		<div id="response" class="mt-8"></div>
	</fieldset>
}

// FolderInputs renders the folder management section
templ FolderInputs(folders []string, editing bool) {
	<div id="folders-container">
		if len(folders) == 0 {
			@FolderRow("", true, false)
		} else {
			for index, folder := range folders {
				@FolderRow(folder, index == 0, true)
			}
		}
	</div>
	if editing {
		<div class="mt-4 uk-flex uk-flex-center">
			<button type="submit" class="uk-btn uk-btn-default mr-2">Save</button>
			<button type="button" class="uk-btn uk-btn-default ml-2" hx-get="/admin/libraries/helpers/cancel-edit" hx-target="#library-form" hx-swap="outerHTML">Cancel</button>
		</div>
	} else {
		<div class="flex justify-center">
			<button type="submit" class="uk-btn uk-btn-default">SUBMIT</button>
		</div>
	}
}

// FolderRow renders a single folder input row with add/remove button
templ FolderRow(folderValue string, isFirst bool, canRemove bool) {
	<div class="folder-row mb-4 flex items-center">
		<input class="uk-input folder-input" type="text" name="folders" placeholder="Folder Path" value={ folderValue }/>
		if isFirst {
			<button type="button" class="uk-btn uk-btn-default ml-2 h-10 w-10" hx-get="/admin/libraries/helpers/add-folder" hx-target="#folders-container" hx-swap="beforeend">
				<uk-icon icon="Plus"></uk-icon>
			</button>
		} else if canRemove {
			<button type="button" class="uk-btn uk-btn-destructive ml-2 h-10 w-10" hx-get="/admin/libraries/helpers/remove-folder" hx-target="closest .folder-row" hx-swap="outerHTML">
				<uk-icon icon="X"></uk-icon>
			</button>
		}
	</div>
}

// Folder component kept for backward compatibility with HTMX responses
templ Folder(folderValue string) {
	@FolderRow(folderValue, false, true)
}
